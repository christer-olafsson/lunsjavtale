"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from os.path import join
from pathlib import Path

from corsheaders.defaults import default_headers
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool, default=False)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda hosts: [i.strip() for i in hosts.strip(',')], default=['localhost'])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third party apps
    'graphene_django',

    # project apps
    'apps.core',
    'apps.users',
    'apps.scm',
    'apps.notifications',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config('ENGINE', 'django.db.backends.postgresql_psycopg2'),
        'NAME': config('NAME', 'lunsjavtale'),
        'USER': config('DB_USER', 'postgres'),
        'PASSWORD': config('PASSWORD', 'jim12345'),
        'HOST': config('HOST', 'localhost'),
        'PORT': config('PORT', cast=int, default=5432),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = config('LANGUAGE_CODE', 'nb:no')

TIME_ZONE = config('TIME_ZONE', 'Europe/Oslo')

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_ROOT = os.path.normpath(join(os.path.dirname(BASE_DIR), 'static'))
STATICFILES_DIRS = []
STATIC_URL = '/static/'
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

# Media files
MEDIA_ROOT = join(os.path.dirname(BASE_DIR), 'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DB_PREFIX = 'lunsjavtale'

# Configuration for Graphene.
GRAPHENE = {
    'SCHEMA': 'backend.schema.schema',
    'MIDDLEWARE': [
        # 'graphql_jwt.middleware.JSONWebTokenMiddleware',
        'backend.middlewares.W3AuthMiddleware',
        'graphene_django.debug.DjangoDebugMiddleware',
    ],
    'RELAY_CONNECTION_MAX_LIMIT': config("RELAY_CONNECTION_MAX_LIMIT", default=100, cast=int),
}

# Cors origin
CORS_ORIGIN_WHITELIST = [
    "http://localhost:3000",
]
CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = list(default_headers) + [
    "appVersion",
    "macAddress",
    "platform",
    "deviceName",
    "os",
    "screenName",
    "ip",
    "skey",
    "appType"
]

# Custom user app
AUTH_USER_MODEL = 'users.User'

# other variables
EXPIRY_LIMIT_DAYS = config('EXPIRY_LIMIT_DAYS', default=30, cast=int)
ACCESS_TOKEN_EXPIRY_LIMIT = config('ACCESS_TOKEN_EXPIRY_LIMIT', default=7, cast=int)

# Email config
EMAIL_HOST = config('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_HOST_USER = config('EMAIL_HOST_USER', None)
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', None)
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_TIMEOUT = config('EMAIL_TIMEOUT', cast=int, default=60)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
SERVER_EMAIL = config('SERVER_EMAIL', EMAIL_HOST_USER)
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', 'Lunsjavtale <lunsjavtale@gmail.com>')

COUPON_ERROR_MESSAGE = "Invalid code"
