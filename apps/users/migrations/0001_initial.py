# Generated by Django 5.0.3 on 2024-03-31 08:57

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import apps.bases.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slogan', models.TextField(blank=True, null=True)),
                ('social_media_links', models.JSONField(blank=True, null=True)),
                ('logo_url', models.TextField(blank=True, null=True)),
                ('cover_photo_url', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('formation_date', models.DateField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'verbose_name_plural': 'Client Details',
                'db_table': 'lunsjavtale_client_details',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=256)),
                ('working_email', models.EmailField(max_length=256)),
                ('slogan', models.TextField(blank=True, null=True)),
                ('social_media_links', models.JSONField(blank=True, null=True)),
                ('logo_url', models.TextField(blank=True, null=True)),
                ('cover_photo_url', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('formation_date', models.DateField(blank=True, null=True)),
                ('contact', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'db_table': 'lunsjavtale_company',
            },
        ),
        migrations.CreateModel(
            name='TrackUserLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=30, null=True)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('data', models.JSONField(null=True)),
                ('header', models.JSONField(null=True)),
                ('is_success', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'lunsjavtale_user_login_tracks',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=30, null=True, unique=True, validators=[apps.bases.utils.username_validator])),
                ('email', models.EmailField(max_length=100, unique=True, validators=[apps.bases.utils.email_validator])),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_profile_photo_verified', models.BooleanField(default=False)),
                ('rejection_reason_profile_photo', models.TextField(blank=True, null=True)),
                ('term_and_condition_accepted', models.BooleanField(default=False)),
                ('privacy_policy_accepted', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(blank=True, null=True)),
                ('deleted_phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('last_active_on', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('activation_token', models.UUIDField(blank=True, null=True)),
                ('deactivation_reason', models.TextField(blank=True, null=True)),
                ('is_expired', models.BooleanField(default=False)),
                ('phone', models.CharField(max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Enter Phone number with country code', regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('post_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='post code')),
                ('gender', models.CharField(blank=True, choices=[('female', 'Female'), ('male', 'Male'), ('other', 'Other')], max_length=8, null=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('developer', 'Developer'), ('user', 'User'), ('owner', 'Owner'), ('manager', 'Manager'), ('employee', 'Employee')], default='user', max_length=16)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('photo_url', models.TextField(blank=True, null=True)),
                ('photo_uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='users', to='users.company')),
            ],
            options={
                'db_table': 'lunsjavtale_users',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='AccessToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('token', models.TextField()),
                ('mac_address', models.CharField(max_length=48, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lunsjavtale_access_tokens',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('address', models.TextField()),
                ('post_code', models.PositiveIntegerField()),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=128, null=True)),
                ('country', models.CharField(blank=True, max_length=128, null=True)),
                ('full_name', models.CharField(blank=True, max_length=128, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('instruction', models.TextField(blank=True, null=True)),
                ('default', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('address_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.typeofaddress')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
                'db_table': 'lunsjavtale_user_addresses',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('token', models.UUIDField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lunsjavtale_user_password_reset',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UnitOfHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(blank=True, max_length=255, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('old_meta', models.JSONField(null=True)),
                ('new_meta', models.JSONField(null=True)),
                ('header', models.JSONField(null=True)),
                ('object_id', models.CharField(max_length=100)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('perform_for', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perform_for', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Unit of histories',
                'db_table': 'lunsjavtale_unit_of_histories',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='UserDeviceToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('device_token', models.CharField(max_length=200)),
                ('device_type', models.CharField(choices=[('ios', 'Ios'), ('android', 'Android'), ('web', 'Web')], max_length=8)),
                ('mac_address', models.CharField(max_length=48, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lunsjavtale_user_device_tokens',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='UserLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='core.language')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lunsjavtale_user_languages',
                'ordering': ['-id'],
            },
        ),
    ]
